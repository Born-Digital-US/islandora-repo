# Uninstall this config when the feature is uninstalled
dependencies:
  enforced:
    module:
      - asu_migrate

id: swette_file
label: Import Collection swette Files
migration_group: migrate_swette_csv

source:
  plugin: csv
  path: /var/www/html/drupal/web/modules/custom/asu_migrate/c_swette_merged_v2.csv
  delimiter: ','

  # 1 means you have a header row, 0 means you don't
  header_row_count: 1

  # Each migration needs a unique key per row in the csv.  Here we're using the file path.
  ids:
    - Filename

  # You can't enter string literals into a process plugin, but you can give it a constant as a 'source'.
  constants:
    # Islandora uses flysystem and stream wrappers to work with files.  What we're really saying here is
    # to put these files in Fedora in a 'csv_migration' folder.  It doesn't matter if the directory
    # doesn't exist yet, it will get created for you automatically.
    destination_dir: 'fedora://swette'

    # Hard-code mime type to jpeg.  This could easily come from a column in the CSV if you have
    # different mimetypes.
    # mime: image/jpeg

    # Everything gets created as admin
    uid: 2
    baseurl: "https://repository.asu.edu"
    basepath: "/mnt/libfile/Repository/old-repo-data/filestore/"

process:

  # Set these properties from constants.
  # filemime: file mime
  uid: constants/uid
  # todo set to asurite
  type: file type

  field_original_name/value: Filename
  filename:
    -
      plugin: transliteration
      source: Filename
    -
      plugin: str_replace
      search: " "
      replace: "_"
    -
      plugin: str_replace
      search: "'"
      replace: ""
    -
      plugin: str_replace
      search: ","
      replace: ""
    -
      plugin: str_replace
      search: ")"
      replace: ""
    -
      plugin: str_replace
      search: "("
      replace: ""
    -
      plugin: str_replace
      search: "&"
      replace: ""
    -
      plugin: str_replace
      search: "["
      replace: ""
    -
      plugin: str_replace
      search: "]"
      replace: ""


  # Construct the destination URI using the file name.
  destination:
    plugin: concat
    delimiter: /
    source:
      - constants/destination_dir
      - '@filename'
    #   - file id

  # filelocation:
  #   plugin: concat
  #   source:
  #     - constants/baseurl
  #     - file url

  # localfilelocation: 

  uri:
    plugin: file_copy
    source:
      - File Location
      - '@destination' # The destination entry from above


destination:
  # These are Drupal 'image' entities we're making, not just plain 'file' entities.
  plugin: 'entity:file'
  # type: file
