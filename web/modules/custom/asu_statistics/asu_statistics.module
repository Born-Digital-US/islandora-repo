<?php

/**
 * @file
 * Contains asu_statistics.module.
 */

/**
 * Implements hook_theme().
 */
function asu_statistics_theme($existing, $type, $theme, $path) {
  return [
    'asu_statistics_chart' => [
      'variables' => [
        'form' => NULL,
        'download_url' => NULL,
        'download_stat_summary_url' => NULL,
        'download_downloads_url' => NULL,
        'total_items' => NULL,
        'stats_table' => NULL,
        'summary_row' => NULL,
        'content_counts_table' => NULL,
        'downloads_table' => NULL,
        'downloads_total' => NULL,
        'total_collections' => NULL,
        'collections_by_institution' => NULL,
      ],
    ],
  ];
}

/**
 * Default preprocessor for the asu_statistics_theme hook.
 */
function template_preprocess_asu_statistics_chart(&$variables) {
  $variables['attributes'] = [
    'id' => ['asu_statistics_chart'],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function asu_statistics_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'asu_statistics/asu_statistics_css';
}

/**
 * Implements hook_file_download().
 */
function asu_statistics_file_download($uri) {
  if (preg_match('/asu_statistics_/', $uri)) {
    if (\Drupal::currentUser()->hasPermission('view islandora repository reports')) {
      return ['Content-disposition' => 'attachment; filename="' . basename($uri) . '"'];
    }
    else {
      return -1;
    }
  }
  return NULL;
}

function asu_statistics_preprocess_node(array &$variables) {
  // We should limit the nodes that have this javascript attached.
  if (is_object($variables['node'])) {
    if ($variables['node']->bundle() == 'asu_repository_item') {
      $field_model_tid = $variables['node']->hasField('field_model') ? $variables['node']->get('field_model')->referencedEntities() : NULL;
      $field_model_term = ($field_model_tid) ? $field_model_tid[0] : NULL;
      $field_model = (isset($field_model_term) && is_object($field_model_term)) ?
        $field_model_term->getName() : '';

      if ($field_model <> 'Complex Object' && ($variables['view_mode'] == "asu_audio" || $variables['view_mode'] == "asu_video" || $variables['view_mode'] == "complex_object_child_box")) {
        $default_config = \Drupal::config('asu_default_fields.settings');
        $servicefile_term = $default_config->get('service_file_taxonomy_term');
        $servicefile = \Drupal::entityTypeManager()->getStorage('media')->loadByProperties([
          'field_media_use' => ['target_id' => $servicefile_term],
          'field_media_of' => ['target_id' => $variables['node']->id]
        ]);
        if (count($servicefile) > 0) {
          $servicefile = reset($servicefile);
        } else {
          $servicefile = NULL;
        }
        if (is_object($servicefile) && ($servicefile->bundle() == 'video' ||
          $servicefile->bundle() == 'audio')) {
          $variables['#attached']['library'] = 'asu_statistics/track';
        }
      }
    }
  }
}
