<?php

use Drupal\search_api\IndexInterface;
use asu_islandora_utils\ASUIslandoraUtils;

/**
 * Implements hook_form_alter().
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 */
function asu_search_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
  if ($form['#id'] == 'views-exposed-form-solr-search-content-page-3') {
    $current_path = \Drupal::service('path.current')->getPath();
    $node = \Drupal::routeMatch()->getParameter('node');
    // since this block is configured to only display on content type = "Collection"
    // we don't need to check the node's content type.
    $new_search_path = ($node) ? '/collections/' . $node->id() . '/search/' : $current_path;
    $form['#action'] = $new_search_path;
  }
}

/**
 * Implements hook_search_api_solr_field_mapping_alter().
 */
function asu_search_search_api_solr_field_mapping_alter(IndexInterface $index, array &$fields, string $language_id) {
  // Make file size and mime type multi-valued.
  $fields['field_file_size'] = 'itm_field_file_size';
  $fields['field_mime_type'] = 'sm_field_mime_type';
}

function asulib_search_preprocess_node(&$variables) {
  $node = \Drupal::request()->attributes->get('node');
  if (!is_object($node) && is_string($node)) {
    $node = \Drupal::entityTypeManager()->getStorage('node')->load($node);
  }
  if ($node && $node->getType() == 'asu_repository_item') {
    $variables['is_published'] = ASUIslandoraUtils::asu_islandora_utils_node_is_published($node);
  }
}
