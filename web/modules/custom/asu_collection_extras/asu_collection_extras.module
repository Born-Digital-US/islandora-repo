<?php

/**
 * getAllCollectionChildren and is used by the blocks in this module to get all
 * of the child nodes so that the same code does't need to be duplicated.
 *
 * @param mixed $collection_node
 *  can take a node object or the node ID value.
 * @param boolean $sort_by_date
 *  (OPTIONAL) whether or not to sort by date, default is FALSE
 * @param integer $limit
 *  the number of results to return (to provide the recent additions for the
 * block that only displays only 4 items)
 */
function getAllCollectionChildren($collection_node, $sort_by_date = false, $limit = 0, $items_only = true) {
  $collection_nid = (is_object($collection_node) ? $collection_node->id() : $collection_node);
  $childrenQuery = \Drupal::entityQuery('node');
  $orGroup = $childrenQuery
    ->orConditionGroup()
    ->condition('field_member_of', $collection_nid)
    ->condition('field_additional_memberships', $collection_nid);
  $childrenQuery
    ->condition($orGroup)
    ->condition('status', 1);
  if ($items_only) {
    $childrenQuery
      ->condition('type', 'asu_repository_item');
  }
  if ($sort_by_date) {
    $childrenQuery
      ->sort('revision_timestamp' , 'DESC');
  }
  if ($limit) {
    $childrenQuery
      ->range(0, $limit);
  }
  return $childrenQuery->execute();
}
