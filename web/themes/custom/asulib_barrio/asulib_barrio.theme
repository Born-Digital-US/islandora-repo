<?php

use Drupal\Core\Template\Attribute;

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function asulib_barrio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
}

function asulib_barrio_preprocess_breadcrumb(&$variables) {
  if ($variables['breadcrumb']) {
    // Add the node title to breadcrumbs as plain text.
    $node = \Drupal::routeMatch()->getParameter('node');
    $current_route = \Drupal::service('current_route_match')->getRouteName();
    if ($node) {
      $request = \Drupal::request();
      $route_match = \Drupal::routeMatch();
      $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

      if (!empty($page_title)) {
        $variables['breadcrumb'][] = [
          'text' => $page_title,
          'attributes' => new Attribute(['class' => ['is_active']])
        ];
      }
    } elseif ($current_route == 'asu_item_extras.complex_object_members') {
        $variables['breadcrumb'][] = [
          'text' => t('Associated media'),
          'attributes' => new Attribute(['class' => ['is_active']])
        ];
    } else {
      // Add the search text as a text-breadcrumb as text.
      $search_param_name = ($current_route == 'repo_bento_search.search_page') ?
        'q' : 'search_api_fulltext';
      $search_term = \Drupal::request()->query->get($search_param_name);
      if ($search_term && $search_term != "") {
        $variables['breadcrumb'][] = [
          'text' => 'Search for "' . $search_term . '"',
          'attributes' => new Attribute(['class' => ['is_active']])
        ];
      }
    }
  }
  $variables['#cache']['contexts'][] = 'url';
}

/**
 * Implements hook_preprocess_node()
 * Builds OAI link out of site URL elements
 */
function asulib_barrio_preprocess_node(&$variables) {
  $node = \Drupal::request()->attributes->get('node');
  if (!is_object($node) && is_string($node)) {
    $node = \Drupal::entityTypeManager()->getStorage('node')->load($node);
  }
  if ($node && $node->getType() == 'asu_repository_item') {
    $site_url = \Drupal::urlGenerator()->generateFromRoute('<front>', [], ['absolute' => TRUE]);
    $url_parts = explode('/', $site_url, -1);
    $domain = $url_parts[2];
    $variables['oai_base_url'] = $site_url . 'oai/request?verb=GetRecord&metadataPrefix=oai_dc&identifier=oai:' . $domain . ':node-';
  }
}

/**
 * Implements hook_theme_suggestions_field_alter()
 * Add view mode to theme suggestions for fields
 */
function asulib_barrio_theme_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__node__' .
      $variables['element']['#field_name'] . '__' .
      $variables['element']['#bundle'] . '__' .
      $variables['element']['#view_mode'];
  $suggestions[] = 'field__node__' .
      $variables['element']['#bundle'] . '__' .
      $variables['element']['#view_mode'];
}

/**
 * To potentially suppress the "Matching Collections" block for any /search
 * that has had a facet filter applied to it.
 */
function asulib_barrio_preprocess_views_view(&$variables) {
  if ($variables['id'] == "solr_search_content") {
    // inspect the query from the URL and if there are any facets, suppress
    // the inclusion of the collections block at the top of the /search page.
    $facet_filters = \Drupal::request()->query->get('f');
    if (is_array($facet_filters) && count($facet_filters) > 0) {
      // Since there are multiple header elements, check to be sure that the
      // "view" is in the header... and only get rid of the header element that
      // matches for a theme name of "view_view__solr_search_content__block_1".
      if (array_key_exists('view', $variables['header']) &&
        !(array_search('view_view__solr_search_content__block_1', $variables['header']['view']['#theme']) === FALSE) ) {
        unset($variables['header']['view']);
      }
    }
  }
}
